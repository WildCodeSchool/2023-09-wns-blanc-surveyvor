version: "3"

services:
  backend:
    build: ./backend
    command: npm run dev
    ports:
      - 3001:3001

    env_file:
      - ./backend/.env.test.backend
    volumes:
      - ./backend/src:/surveyvore/src:rw
      - ./backend/node_modules:/surveyvore/node_modules
      - ./backend/package.json:/surveyvore/package.json:rw
      - ./backend/migrations:/surveyvore/migrations:rw
      - ./backend/jest.config.js:/surveyvore/jest.config.js:rw
      - ./backend/tsconfig.json:/surveyvore/tsconfig.json
    environment:
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:3001'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    command: npm run dev
    ports:
      - 3000:3000
    env_file:
      - ./frontend/.env.test.frontend
    volumes:
      - ./frontend/public:/surveyvore/public:rw
      - ./frontend/src:/surveyvore/src:rw
      - ./frontend/package.json:/surveyvore/package.json:rw
      - ./frontend/node_modules:/surveyvore/node_modules
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:3000' || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=surveyvore
      - POSTGRES_USER=surveyvore
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/customDataFolder
    volumes:
      - ./dbData:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d surveyvore -U surveyvore" ]
      interval: 5s
      timeout: 5s
      retries: 10

  e2e:
    build: ./e2e
    volumes:
      - ./e2e/playwright-report:/app/playwright-report
      - ./e2e/test-results:/app/test-results
    depends_on:
      frontend:
        condition: service_healthy

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
